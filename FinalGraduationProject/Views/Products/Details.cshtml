@model FinalGraduationProject.Models.Product

@{
    ViewData["Title"] = Model.Name;
}

<main class="page py-5" style="background:#f8f9fa;">
    <div class="container">
        <div class="row g-5">
            <!-- صورة المنتج -->
            <div class="col-md-5">
                <div class="border rounded shadow-sm p-2 bg-white">
                    <img src="@Url.Content(Model.ImageUrl)"
                         alt="@Model.Name"
                         class="img-fluid rounded product-image"
                         style="object-fit:cover; max-height:450px; width:100%;" />
                </div>
            </div>

            <!-- تفاصيل المنتج -->
            <div class="col-md-7 position-relative">
                <h2 class="fw-bold mb-3 text-primary">@Model.Name</h2>
                <p class="text-muted">@Model.Description</p>

                <ul class="list-unstyled mb-4">
                    <li><strong>Brand:</strong> @Model.Brand?.Name</li>
                    <li><strong>Category:</strong> @Model.Category?.Name</li>
                    <li><strong>Color:</strong> @Model.Color</li>
                </ul>

                <!-- السعر -->
                <h3 class="mb-4 text-primary">$@Model.Price</h3>

                <!-- Add to Cart -->
                @if (!User.IsInRole("Admin"))
                {
                    <form asp-controller="Carts" asp-action="AddToCart" method="post" class="border p-3 bg-light rounded">
                        @Html.AntiForgeryToken()

                        <input type="hidden" name="productId" value="@Model.Id" />

                        <div class="mb-3">
                            <label for="productSizeId" class="form-label fw-semibold">Select Size</label>
                            <select id="productSizeId" name="productSizeId" class="form-select shadow-sm" required>
                                <option value="">Choose size</option>
                                @foreach (var ps in Model.ProductSizes)
                                {
                                    <option value="@ps.Id">@ps.Size.Name</option>
                                }
                            </select>
                        </div>

                        <div class="d-flex align-items-center mb-3">
                            <button type="button" class="btn btn-light" onclick="changeQty(-1)">-</button>
                            <input type="number" id="quantity" name="quantity" value="1" min="1"
                                   class="form-control text-center mx-2" style="width:70px;">
                            <button type="button" class="btn btn-light" onclick="changeQty(1)">+</button>
                        </div>

                        <button type="submit" class="btn btn-dark" id="addToCartBtn">
                            <i class="fas fa-shopping-cart me-2"></i> Add to Cart
                        </button>
                    </form>
                }

                <a asp-action="Index" class="btn btn-outline-secondary mt-3">
                    <i class="fas fa-arrow-left me-1"></i> Back to Products
                </a>
            </div>
        </div>
    </div>
</main>

<script>
    function changeQty(delta) {
        let qtyInput = document.getElementById("quantity");
        let current = parseInt(qtyInput.value) || 1;
        current += delta;
        if (current < 1) current = 1;
        qtyInput.value = current;
    }

    document.getElementById('addToCartBtn').addEventListener('click', function (e) {
        e.preventDefault();

        const form = this.closest("form");
        const img = document.querySelector('.product-image');
        const cartIcon = document.querySelector('#cartIcon, .cart-icon-navbar, .fa-shopping-cart'); // عدل السيليكتور حسب مكان الأيقونة
        const badge = document.getElementById('cartBadge');

        if (!img || !cartIcon) {
            form.submit(); // fallback لو الأيقونة مش موجودة
            return;
        }

        // Clone image and animate
        const imgRect = img.getBoundingClientRect();
        const cartRect = cartIcon.getBoundingClientRect();
        const flyImg = img.cloneNode(true);
        flyImg.classList.add('fly-img');
        document.body.appendChild(flyImg);

        flyImg.style.position = "fixed";
        flyImg.style.left = imgRect.left + 'px';
        flyImg.style.top = imgRect.top + 'px';
        flyImg.style.width = imgRect.width + 'px';
        flyImg.style.height = imgRect.height + 'px';
        flyImg.style.transition = "all 0.8s ease-in-out";
        flyImg.style.zIndex = 1000;

        setTimeout(() => {
            flyImg.style.transform = `translate(${cartRect.left - imgRect.left}px, ${cartRect.top - imgRect.top}px) scale(0.2)`;
            flyImg.style.opacity = 0.2;
        }, 10);

        setTimeout(() => {
            flyImg.remove();
            cartIcon.classList.add('cart-bounce');
            if (badge) {
                badge.style.display = 'inline-block';
                badge.classList.remove('cart-badge-anim');
                void badge.offsetWidth;
                badge.classList.add('cart-badge-anim');
                setTimeout(() => { badge.style.display = 'none'; }, 1200);
            }
            setTimeout(() => cartIcon.classList.remove('cart-bounce'), 700);

            // ⬅️ بعد ما يخلص الأنيميشن يترسل الفورم عادي
            form.submit();
        }, 900);
    });
</script>

<style>
    .fly-img {
        border-radius: 10px;
        pointer-events: none;
    }

    .cart-bounce {
        animation: bounce 0.6s;
    }

    {
        transform: scale(1);
    }

    50% {
        transform: scale(1.2);
    }

    }

    .cart-badge-anim {
        animation: pop 0.6s;
    }

    {
        transform: scale(0);
        opacity: 0;
    }

    50% {
        transform: scale(1.3);
        opacity: 1;
    }

    100% {
        transform: scale(1);
    }

    }
</style>

<link rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
